<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="originalContent" value="# MediCudado - Aplicativo de Gerenciamento de Medicamentos&#10;&#10;## Descrição&#10;O MediCudado é um aplicativo móvel desenvolvido em React Native + Expo para auxiliar no gerenciamento de medicamentos, oferecendo recursos como controle de horários, estoque e histórico de medicações.&#10;&#10;## Pré-requisitos&#10;&#10;Antes de começar, certifique-se de ter instalado em sua máquina:&#10;&#10;- [Node.js](https://nodejs.org/) (versão 14 ou superior)&#10;- [npm](https://www.npmjs.com/) ou [Yarn](https://yarnpkg.com/)&#10;- [Git](https://git-scm.com/)&#10;- [Expo Go](https://expo.dev/client) (no seu dispositivo móvel)&#10;&#10;## Configuração do Ambiente&#10;&#10;1. Instale o Expo CLI globalmente:&#10;```bash&#10;npm install -g expo-cli&#10;```&#10;&#10;2. Clone o repositório:&#10;```bash&#10;git clone [URL_DO_REPOSITORIO]&#10;cd medc/medicudado&#10;```&#10;&#10;3. Instale as dependências do projeto:&#10;```bash&#10;npm install&#10;```&#10;&#10;## Executando o Projeto&#10;&#10;1. Inicie o servidor de desenvolvimento:&#10;```bash&#10;npm start&#10;# ou&#10;expo start&#10;```&#10;&#10;2. Você terá algumas opções para executar o aplicativo:&#10;&#10;- Escaneie o QR Code com o aplicativo Expo Go (Android) ou Câmera (iOS)&#10;- Pressione 'a' no terminal para abrir no emulador Android&#10;- Pressione 'i' no terminal para abrir no simulador iOS&#10;- Pressione 'w' para abrir na versão web&#10;&#10;## Estrutura do Projeto&#10;&#10;```&#10;medicudado/&#10;├── src/&#10;│   ├── screens/         # Telas do aplicativo&#10;│   ├── navigation/      # Configurações de navegação&#10;│   ├── services/        # Serviços e APIs&#10;│   ├── components/      # Componentes reutilizáveis&#10;│   ├── contexts/        # Contextos React&#10;│   ├── theme/          # Configurações de tema&#10;│   └── types/          # Definições de tipos TypeScript&#10;```&#10;&#10;## Funcionalidades Principais&#10;&#10;-  Gerenciamento de medicamentos&#10;- ⏰ Sistema de alarmes e notificações&#10;-  Controle de estoque&#10;-  Histórico de medicações&#10;-  Perfil do usuário&#10;-  Sistema de segurança com PIN&#10;&#10;## Solução de Problemas&#10;&#10;### Error: Unable to start server&#10;Se você encontrar problemas ao iniciar o servidor, tente:&#10;1. Limpar o cache:&#10;```bash&#10;expo start -c&#10;```&#10;&#10;2. Reinstalar as dependências:&#10;```bash&#10;rm -rf node_modules&#10;npm install&#10;```&#10;&#10;### Erro de Metro Bundler&#10;Se o Metro Bundler não iniciar corretamente:&#10;1. Pare o servidor (Ctrl+C)&#10;2. Execute:&#10;```bash&#10;npm start --reset-cache&#10;```&#10;&#10;### Problemas com o Expo Go&#10;Se o aplicativo não conectar com o Expo Go:&#10;1. Verifique se seu celular está na mesma rede Wi-Fi que o computador&#10;2. Desative temporariamente o firewall&#10;3. Use o modo &quot;Tunnel&quot; no Expo DevTools&#10;&#10;## Testando no Emulador&#10;&#10;### Android&#10;1. Instale o Android Studio&#10;2. Configure um dispositivo virtual (AVD)&#10;3. Execute:&#10;```bash&#10;npm run android&#10;```&#10;&#10;### iOS (apenas macOS)&#10;1. Instale o Xcode&#10;2. Execute:&#10;```bash&#10;npm run ios&#10;```&#10;&#10;## Desenvolvimento&#10;&#10;Para desenvolver novas funcionalidades:&#10;&#10;1. Crie uma nova branch:&#10;```bash&#10;git checkout -b feature/nova-funcionalidade&#10;```&#10;&#10;2. Faça suas alterações seguindo os padrões do projeto&#10;&#10;3. Teste localmente:&#10;```bash&#10;npm test&#10;```&#10;&#10;4. Faça o commit seguindo o padrão convencional:&#10;```bash&#10;git commit -m &quot;feat: adiciona nova funcionalidade&quot;&#10;```&#10;&#10;## Versionamento&#10;&#10;O projeto segue o [Semantic Versioning](https://semver.org/). Para ver as versões disponíveis, acesse as [tags neste repositório](URL_DO_REPOSITORIO/tags).&#10;&#10;## Suporte&#10;&#10;Em caso de dúvidas ou problemas:&#10;1. Consulte a documentação&#10;2. Abra uma issue no repositório&#10;3. Entre em contato com a equipe de desenvolvimento&#10;&#10;## Licença&#10;&#10;Este projeto está sob a licença MIT. Veja o arquivo LICENSE para mais detalhes.&#10;" />
              <option name="updatedContent" value="# MediCuidado - Aplicação de Gerenciamento de Medicamentos&#13;&#10;&#13;&#10;##  Visão Geral&#13;&#10;&#13;&#10;O **MediCuidado** é uma aplicação mobile desenvolvida em React Native e totalmente adaptada para o **Expo**, focada no gerenciamento inteligente de medicamentos para idosos e seus cuidadores. A aplicação oferece duas interfaces distintas otimizadas para diferentes perfis de usuários.&#13;&#10;&#13;&#10;##  Objetivo Principal&#13;&#10;&#13;&#10;Facilitar o controle e acompanhamento de medicamentos, reduzindo erros de medicação e melhorando a adesão ao tratamento através de uma interface intuitiva e recursos de monitoramento em tempo real.&#13;&#10;&#13;&#10;##  Perfis de Usuário&#13;&#10;&#13;&#10;### ‍⚕️ Cuidador (Interface Completa)&#13;&#10;- Dashboard completo com navegação por abas&#13;&#10;- Gerenciamento total de medicamentos, alarmes e pacientes&#13;&#10;- Controle de estoque com alertas automáticos&#13;&#10;- Relatórios detalhados e histórico completo&#13;&#10;- Configurações avançadas de segurança e notificações&#13;&#10;&#13;&#10;###  Idoso (Interface Simplificada)&#13;&#10;- Visualização clara dos medicamentos do dia&#13;&#10;- Próximo medicamento destacado com horário&#13;&#10;- Botões grandes para marcar como tomado&#13;&#10;- Acesso direto à ajuda e emergência&#13;&#10;- Interface com ícones e textos grandes&#13;&#10;&#13;&#10;## ️ Tecnologias Utilizadas&#13;&#10;&#13;&#10;- **React Native** - Framework para desenvolvimento mobile&#13;&#10;- **Expo** - Plataforma para desenvolvimento React Native&#13;&#10;- **React Navigation** - Navegação entre telas&#13;&#10;- **AsyncStorage** - Armazenamento local de dados&#13;&#10;- **Context API** - Gerenciamento de estado global&#13;&#10;&#13;&#10;##  Pré-requisitos&#13;&#10;&#13;&#10;Antes de começar, certifique-se de ter instalado:&#13;&#10;&#13;&#10;- [Node.js](https://nodejs.org/) (versão 14 ou superior)&#13;&#10;- [npm](https://www.npmjs.com/) ou [Yarn](https://yarnpkg.com/)&#13;&#10;- [Git](https://git-scm.com/)&#13;&#10;- [Expo Go](https://expo.dev/client) (no seu dispositivo móvel)&#13;&#10;- [Expo CLI](https://docs.expo.dev/workflow/expo-cli/)&#13;&#10;&#13;&#10;##  Instalação e Execução&#13;&#10;&#13;&#10;### 1. Clone o repositório&#13;&#10;```bash&#13;&#10;git clone [URL_DO_REPOSITORIO]&#13;&#10;cd MediCuidado&#13;&#10;```&#13;&#10;&#13;&#10;### 2. Instale as dependências&#13;&#10;```bash&#13;&#10;npm install&#13;&#10;```&#13;&#10;&#13;&#10;### 3. Execute o projeto&#13;&#10;```bash&#13;&#10;npm start&#13;&#10;# ou&#13;&#10;expo start&#13;&#10;```&#13;&#10;&#13;&#10;### 4. Execute no dispositivo&#13;&#10;- Escaneie o QR Code com o app **Expo Go** (Android/iOS)&#13;&#10;- Ou pressione `a` para Android Emulator&#13;&#10;- Ou pressione `i` para iOS Simulator&#13;&#10;&#13;&#10;## ️ Estrutura do Projeto&#13;&#10;&#13;&#10;```&#13;&#10;MediCuidado/&#13;&#10;├── App.js                  # Componente raiz da aplicação&#13;&#10;├── app.json               # Configuração do Expo&#13;&#10;├── index.js               # Ponto de entrada&#13;&#10;├── package.json           # Dependências e scripts&#13;&#10;├── assets/                # Recursos visuais (ícones, splash)&#13;&#10;└── src/                   # Código fonte principal&#13;&#10;    ├── contexts/          # Contextos React (AuthContext)&#13;&#10;    ├── navigation/        # Sistema de navegação&#13;&#10;    ├── screens/           # Todas as telas da aplicação&#13;&#10;    └── services/          # Serviços e utilitários&#13;&#10;```&#13;&#10;&#13;&#10;##  Funcionalidades Principais&#13;&#10;&#13;&#10;### Para Cuidadores:&#13;&#10;- ✅ **Dashboard completo** com navegação por abas&#13;&#10;- ✅ **Gerenciamento de medicamentos** (adicionar, editar, excluir)&#13;&#10;- ✅ **Sistema de alarmes** configurável&#13;&#10;- ✅ **Controle de estoque** com alertas&#13;&#10;- ✅ **Histórico detalhado** com filtros&#13;&#10;- ✅ **Gestão de pacientes**&#13;&#10;- ✅ **Central de notificações**&#13;&#10;- ✅ **Configurações avançadas**&#13;&#10;&#13;&#10;### Para Idosos:&#13;&#10;- ✅ **Interface simplificada**&#13;&#10;- ✅ **Próximo medicamento** em destaque&#13;&#10;- ✅ **Botões grandes** e claros&#13;&#10;- ✅ **Acesso direto** à ajuda&#13;&#10;&#13;&#10;##  Telas Implementadas&#13;&#10;&#13;&#10;1. **SelectUserTypeScreen** - Seleção do tipo de usuário&#13;&#10;2. **HomeScreen** - Dashboard principal do cuidador&#13;&#10;3. **CuidadoHomeScreen** - Interface simplificada para idosos&#13;&#10;4. **MedicamentosScreen** - Lista e gerenciamento de medicamentos&#13;&#10;5. **AddMedicamentoScreen** - Formulário para adicionar medicamentos&#13;&#10;6. **AlarmesScreen** - Configuração de alarmes&#13;&#10;7. **PacientesScreen** - Gestão de pacientes&#13;&#10;8. **EstoqueScreen** - Controle de estoque&#13;&#10;9. **HistoricoScreen** - Histórico de medicações&#13;&#10;10. **NotificacoesScreen** - Central de notificações&#13;&#10;11. **ConfiguracoesScreen** - Configurações do aplicativo&#13;&#10;12. **PerfilScreen** - Perfil do usuário&#13;&#10;13. **AjudaScreen** - Central de ajuda e suporte&#13;&#10;&#13;&#10;##  Configuração para Desenvolvimento&#13;&#10;&#13;&#10;### Estrutura de Navegação&#13;&#10;A aplicação utiliza uma navegação customizada adaptada para o Expo:&#13;&#10;- **Stack Navigator** principal&#13;&#10;- **Barra de navegação customizada** (evitando problemas com bottom tabs)&#13;&#10;- **Navegação condicional** baseada no tipo de usuário&#13;&#10;&#13;&#10;### Context API&#13;&#10;O projeto utiliza React Context para gerenciamento de estado:&#13;&#10;- **AuthContext** - Gerencia autenticação e tipo de usuário&#13;&#10;- **userType** - Define qual interface mostrar (cuidador/idoso)&#13;&#10;&#13;&#10;##  Scripts Disponíveis&#13;&#10;&#13;&#10;```bash&#13;&#10;# Iniciar o projeto&#13;&#10;npm start&#13;&#10;&#13;&#10;# Executar no Android&#13;&#10;npm run android&#13;&#10;&#13;&#10;# Executar no iOS  &#13;&#10;npm run ios&#13;&#10;&#13;&#10;# Executar no Web&#13;&#10;npm run web&#13;&#10;&#13;&#10;# Build para produção&#13;&#10;expo build:android&#13;&#10;expo build:ios&#13;&#10;```&#13;&#10;&#13;&#10;##  Adaptações para Expo&#13;&#10;&#13;&#10;- ✅ **Navegação customizada** sem dependências problemáticas&#13;&#10;- ✅ **Componentes nativos** 100% compatíveis&#13;&#10;- ✅ **Hot reload** completo&#13;&#10;- ✅ **Build otimizado** para múltiplas plataformas&#13;&#10;- ✅ **Testagem instantânea** via Expo Go&#13;&#10;&#13;&#10;##  Funcionalidades Futuras&#13;&#10;&#13;&#10;-  **Notificações push** nativas&#13;&#10;-  **Modo offline** completo&#13;&#10;-  **Autenticação biométrica**&#13;&#10;- ☁️ **Sincronização na nuvem**&#13;&#10;-  **Relatórios avançados** com gráficos&#13;&#10;-  **Modo escuro** automático&#13;&#10;&#13;&#10;##  Suporte&#13;&#10;&#13;&#10;Para dúvidas ou suporte:&#13;&#10;- **Email**: suporte@medicuidado.com&#13;&#10;- **Documentação**: README_COMPLETO.md&#13;&#10;- **Issues**: [Abrir issue no repositório]&#13;&#10;&#13;&#10;##  Licença&#13;&#10;&#13;&#10;Este projeto está sob a licença MIT. Veja o arquivo [LICENSE](LICENSE) para mais detalhes.&#13;&#10;&#13;&#10;## ‍ Desenvolvido para&#13;&#10;&#13;&#10;**Projeto Acadêmico** - Universidade [Nome da Universidade]  &#13;&#10;**Curso**: [Nome do Curso]  &#13;&#10;**Disciplina**: [Nome da Disciplina]  &#13;&#10;**Ano**: 2025&#13;&#10;&#13;&#10;---&#13;&#10;&#13;&#10;**MediCuidado** - Desenvolvido com ❤️ para cuidar de quem você ama." />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>